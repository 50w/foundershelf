{"version":3,"sources":["routes/Root/components/Founder/Founder.tsx","routes/Root/components/Founder/index.ts","routes/Root/components/AdvancedGridList/index.ts","routes/Root/components/AdvancedGridList/AdvancedGridList.tsx","shelf.ts","routes/Root/index.ts","routes/Root/Root.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Transition","props","react_default","a","createElement","Slide_default","Object","assign","direction","FullScreenDialog","_this$props","this","handleClose","open","person","Dialog_default","fullScreen","onClose","TransitionComponent","name","React","Component","Founder","withStyles","appBar","position","flex","AdvancedGridList","root","flexWrap","justifyContent","width","maxHeight","paddingBottom","gridList","transform","boxShadow","titleBar","background","icon","color","classes","selectPerson","matches","useMediaQuery","className","GridList_default","cellHeight","spacing","cols","people","map","GridListTile_default","onClick","key","img","rows","src","alt","GridListTileBar_default","title","titlePosition","actionPosition","titlesToBooks","arr","books","forEach","element","library","push","Mindset","author","Thinking in Systems","Why We Sleep: Unlocking the Power of Sleep and Dreams","The Hitchhiker's Guide to the Galaxy","Einstein: His Life and Universe","Structures: Or Why Things Don't Fall Down","Superintelligence: Paths, Dangers, Strategies","Zero to One: Notes on Startups, or How to Build the Future","The Remains of the Day","Built to Last: Successful Habits of Visionary Companies","Creation: Life and How to Make It","Good to Great: Why Some Companies Make the Leap … and Others Don't","The Innovator's Dilemma","Sam Walton: Made in America","The Mythical Man-Month","persons","Tobias Lütke","description","company","Elon Musk","Jeff Bezos","Mark Zuckerberg","shelf","namesToPeople","state","detailsOpen","selected","founderClickOpen","_this","setState","founderClose","_this$state","components_Founder","components_AdvancedGridList","App","Fragment","style","target","href","Card_default","raised","margin","padding","textAlign","BrowserRouter","Route","path","component","Root","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02c195fd.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Slide from '@material-ui/core/Slide';\n\nimport {Person} from '../../../../types'\n\nfunction Transition(props: any) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\n\ninterface Props {\n    handleClose(): void;\n    person: Person | null;\n    open: boolean;\n}\n\n\nclass FullScreenDialog extends React.Component<Props, any> {\n\n  render() {\n    const { handleClose, open, person } = this.props;\n    return person ? (\n      <div>\n        <Dialog\n          fullScreen\n          open={open}\n          onClose={handleClose}\n          TransitionComponent={Transition}\n        >\n        {person.name}\n        </Dialog>\n      </div>\n    ): null;\n  }\n}\n\nexport default withStyles({\n    appBar: {\n      position: 'relative',\n    },\n    flex: {\n      flex: 1,\n    },\n  })(FullScreenDialog);","import Founder from './Founder';\n\nexport default Founder;\n","import AdvancedGridList from './AdvancedGridList';\n\nexport default AdvancedGridList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { unstable_useMediaQuery as useMediaQuery } from '@material-ui/core/useMediaQuery';\n\nimport {Person} from '../../../../types'\n\ninterface Props { \n  classes: any;\n  selectPerson(selected: Person): void;\n  people: Person[]; \n}\n\nconst AdvancedGridList: React.SFC<any> = (props:Props) => {\n    const { classes, selectPerson } = props;\n    const matches = useMediaQuery('(min-width:768px)');\n\n    return (\n      <div className={classes.root}>\n        <GridList cellHeight={200} spacing={1} cols={matches ? 3 : 2} className={classes.gridList}>\n          {props.people.map((person:Person) => (\n            <GridListTile onClick={()=> selectPerson(person)} key={person.img} cols={1} rows={matches ? 2 : 1}>\n              <img src={person.img} alt={person.name} />\n              <GridListTileBar\n                title={person.name}\n                titlePosition=\"bottom\"\n                actionPosition=\"left\"\n                className={classes.titleBar}\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    );\n  }\n  \n  AdvancedGridList.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \nexport default withStyles({\n    root: {\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      width: '100%',\n      maxHeight: 'calc(100VH-20rem)',\n      paddingBottom: '1rem',\n    },\n    gridList: {\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n      boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)',\n\n    },\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, ' +\n        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    icon: {\n      color: 'white',\n    },\n})(AdvancedGridList);","import { string } from \"prop-types\";\nimport {Shelf, Person, People, Book, Books} from './types'\n\n\n// Utilities ------------------------------------\nfunction titlesToBooks(arr: string[]):Book[] {\n    const books: Book[] = []\n    arr.forEach(element => {\n        library[element] ? books.push(library[element]) : null;\n    });\n    return books\n}\n\nfunction namesToPeople(arr: string[]):Person[] {\n    const people: Person[] = []\n    arr.forEach(element => {\n        persons[element] ? people.push(persons[element]) : null;\n    });\n    return people\n}\n\n// Data -----------------------------------------\nconst library:Books = {\n    \"Mindset\": {\n        title: \"Mindset\",\n        author: \"Carol Dweck\",\n        img: \"https://images.gr-assets.com/books/1364251156l/1307582.jpg\"\n    },\n    \"Thinking in Systems\": {\n        title: \"Thinking in Systems\",\n        author: \"Donella Meadows\",\n        img: \"https://images-na.ssl-images-amazon.com/images/I/61npQHfWgAL.jpg\",\n    },\n    \"Why We Sleep: Unlocking the Power of Sleep and Dreams\": {\n        title: \"Why We Sleep: Unlocking the Power of Sleep and Dreams\",\n        author: \"Matthew Walker\",\n        img: \"https://images-na.ssl-images-amazon.com/images/I/81w6RZ6xm1L.jpg\"\n    },\n    \"The Hitchhiker's Guide to the Galaxy\": {\n        title: \"The Hitchhiker's Guide to the Galaxy\",\n        author: \"Douglas Adams\",\n        img: \"\",\n    },\n    \"Einstein: His Life and Universe\": {\n        title: \"Einstein: His Life and Universe\",\n        author: \"Walter Isaacson\",\n        img: \"\"\n    },\n    \"Structures: Or Why Things Don't Fall Down\": {\n        title: \"Structures: Or Why Things Don't Fall Down\",\n        author: \"J.E. Gordon\",\n        img: \"\",\n    },\n    \"Superintelligence: Paths, Dangers, Strategies\": {\n        title: \"Superintelligence: Paths, Dangers, Strategies\",\n        author: \"Nick Bostrom\",\n        img: \"\",\n    },\n    \"Zero to One: Notes on Startups, or How to Build the Future\": {\n        title: \"Zero to One: Notes on Startups, or How to Build the Future\",\n        author: \"Peter Thiel\",\n        img: \"\",\n    },\n    \"The Remains of the Day\": {\n        title: \"The Remains of the Day\",\n        author: \"Kazuo Ishiguro\",\n        img: \"https://sc.cnbcfm.com/applications/cnbc.com/resources/files/2017/03/28/71d9G7xwaLL.jpg\",\n    },\n    \"Built to Last: Successful Habits of Visionary Companies\": {\n        title: \"Built to Last: Successful Habits of Visionary Companies\",\n        author: \"Jim Collins\",\n        img: \"https://sc.cnbcfm.com/applications/cnbc.com/resources/files/2017/03/28/412OMhMA+lL._SX330_BO1,204,203,200_.jpg\",\n    },\n    \"Creation: Life and How to Make It\": {\n        title: \"Creation: Life and How to Make It\",\n        author: \"Steve Grand\",\n        img: \"https://sc.cnbcfm.com/applications/cnbc.com/resources/files/2017/03/28/41Y5MRAJP9L._SX328_BO1,204,203,200_.jpg\"\n    },\n    \"Good to Great: Why Some Companies Make the Leap … and Others Don't\": {\n        title: \"Good to Great: Why Some Companies Make the Leap … and Others Don't\",\n        author: \"Jim Collins\",\n        img: \"https://sc.cnbcfm.com/applications/cnbc.com/resources/files/2017/03/28/41VrxaCVU2L.jpg\"\n    },\n    \"The Innovator's Dilemma\": {\n        title: \"The Innovator's Dilemma\",\n        author: \"Clayton Christensen\",\n        img: \"https://sc.cnbcfm.com/applications/cnbc.com/resources/files/2016/09/28/TB-3_The_Innovators_Dilemma.jpg\",\n    },\n    \"Sam Walton: Made in America\": {\n        title: \"Sam Walton: Made in America\",\n        author: \"Sam Walton\",\n        img: \"https://sc.cnbcfm.com/applications/cnbc.com/resources/files/2017/03/28/51hdHY1gTSL._SX299_BO1,204,203,200_.jpg\"\n    },\n    \"The Mythical Man-Month\": {\n        title: \"The Mythical Man-Month\",\n        author: \"Frederick P. Brooks, Jr.\",\n        img: \"https://sc.cnbcfm.com/applications/cnbc.com/resources/files/2017/03/28/51XnDL5KC+L._SX334_BO1,204,203,200_.jpg\"\n    }\n\n}\n\nconst persons:People = {\n    \"Tobias Lütke\" : {\n        name: \"Tobias Lütke\",\n        img: \"https://avatars2.githubusercontent.com/u/347?s=400&v=4\",\n        description: \"Tobias Lütke (born 1980) is the German-born founder and CEO of Shopify, a commerce company based in Ottawa, Canada. He has served on the core team of the Ruby on Rails framework and has created open source libraries such as Active Merchant.\",\n        company: \"Shopify\",\n        books: titlesToBooks([\"Mindset\", \"Thinking in Systems\", \"Why We Sleep: Unlocking the Power of Sleep and Dreams\"]), \n    },\n    \"Elon Musk\" : {\n        name: \"Elon Musk\",\n        img: \"https://amp.businessinsider.com/images/5b7440dcb354cd32108b5396-750-563.jpg\",\n        description: \"South African entrepreneur Elon Musk is known for founding Tesla Motors and SpaceX, which launched a landmark commercial spacecraft in 2012.\",\n        company: \"Tesla Motors & SpaceX\",\n        books: titlesToBooks([\"The Hitchhiker's Guide to the Galaxy\", \"Einstein: His Life and Universe\", \"Structures: Or Why Things Don't Fall Down\", \"Superintelligence: Paths, Dangers, Strategies\", \"Zero to One: Notes on Startups, or How to Build the Future\",]), \n    },\n    \"Jeff Bezos\" : {\n        name: \"Jeff Bezos\",\n        img: \"https://specials-images.forbesimg.com/imageserve/5b8eb1b3a7ea434b99d54b36/960x0.jpg?fit=scale\",\n        description: \"American entrepreneur Jeff Bezos is the founder and chief executive officer of Amazon.com and owner of 'The Washington Post.' His successful business ventures have made him one of the richest people in the world.\",\n        company: \"Amazon & The Washington Post\",\n        books: titlesToBooks([\"The Remains of the Day\", \"Built to Last: Successful Habits of Visionary Companies\", \"Creation: Life and How to Make It\", \"Good to Great: Why Some Companies Make the Leap … and Others Don't\", \"The Innovator's Dilemma\", \"Sam Walton: Made in America\", \"The Mythical Man-Month\"]), \n    },\n    \"Mark Zuckerberg\" : {\n        name: \"Mark Zuckerberg\",\n        img: \"https://static.independent.co.uk/s3fs-public/thumbnails/image/2018/02/05/13/0.jpg?w968\",\n        description: \"\",\n        company: \"Facebook\",\n        books: titlesToBooks([]),\n    }\n}\n\n\nconst shelf:Shelf = {\n    people: namesToPeople([\"Tobias Lütke\",\"Elon Musk\", \"Jeff Bezos\", \"Mark Zuckerberg\",\"Tobias Lütke\",\"Elon Musk\", \"Jeff Bezos\", \"Mark Zuckerberg\", \"Tobias Lütke\",\"Elon Musk\", \"Jeff Bezos\", \"Mark Zuckerberg\"])\n}\n\nexport default shelf","import root from './Root';\n\nexport default root;\n","import React, { Component } from 'react';\n\nimport {AdvancedGridList, Founder} from './components'\nimport shelf from '../../shelf';\nimport './Root.css'\nimport { Person } from '../../types';\n\ninterface Props {\n}\n\ninterface State {\n  selected: Person | null;\n  detailsOpen: boolean;\n}\n\nclass Root extends Component<any, State> {\n  state: State = {\n    detailsOpen: false,\n    selected: null,\n  }\n\n  founderClickOpen = (selected: Person) => {\n    this.setState({ selected, detailsOpen: true });\n  };\n\n  founderClose = () => {\n    this.setState({ detailsOpen: false });\n  };\n\n  render() {\n    const {selected, detailsOpen} = this.state;\n    return (\n      <div className=\"persons\">\n        <Founder handleClose={this.founderClose} person={selected} open={detailsOpen}/>\n        <AdvancedGridList selectPerson={this.founderClickOpen} people={shelf.people}/>\n      </div>\n    );\n  }\n}\n\nexport default Root;\n","import React, { Component } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport {Root} from './routes';\nimport{AppBar} from './components'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      {/* <AppBar/> */}\n      <h2 className='header'>\n        FounderShelf.space\n        <a style={{color: 'white'}} target='_blank' href='https://www.github.com/nicklewanowicz/founder-shelfspace'><i className=\"fab fa-github\"></i></a>\n      </h2>\n      <div className='element'/>\n      <div className=\"App\">\n      <Card raised style={{margin: '1rem 0.25rem 1rem 0.25rem', padding: '0.5rem 1rem 0.5rem 1rem', textAlign: 'left'}}>\n          <div>\n              <h2>What is Founder Shelfspace?</h2>\n              <p>\n                What does the bookshelf of the worlds most successful founders, entrepreneurs, and investors look like? Get context on how they think and browse the growing library of books they recommend...\n              </p>\n          </div>\n        </Card>\n        <Router>\n          <Route path='/' component={Root}/>\n        </Router>\n      </div>\n      <div className='' style={{textAlign: 'center', margin: '1rem 0 2rem 0'}}>\n          Made with ❤️ by <a target='_blank' href='https://www.github.com/nicklewanowicz'>Nick</a> and <a target='_blank' href='https://www.github.com/foopert'>Connor</a> \n      </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}