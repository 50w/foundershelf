{"version":3,"sources":["components/Grid/Grid.tsx","components/Founder/Founder.tsx","App.tsx","content/data.ts","serviceWorker.ts","index.tsx"],"names":["Grid","_ref","founders","selectFounder","react_default","a","createElement","map","founder","books","company","description","name","img","_useState","useState","_useState2","Object","slicedToArray","open","console","log","key","onClick","style","height","width","objectFit","objectPosition","borderRadius","alt","src","concat","substring","founderSquare","founderGrid","Founder","_ref$founder","unselect","_ref2","author","title","renderBookGrid","App","selected","setSelected","filter","book","recommendations","includes","select","window","scrollTo","href","target","Fragment","flexDirection","renderHeader","undefined","padding","contributors","i","url","delimiter","length","renderContributors","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d7b5dd4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Person } from \"../../content/types\";\n\ninterface Props {\n  founders: Person[],\n  selectFounder(founder: Person): void,\n}\n\nexport function Grid({founders, selectFounder}: Props) {\n\n  return founderGrid(founders);\n\n  function founderGrid(founders: Person[]) {\n    return (\n      <section>{founders.map((founder) => founderSquare(founder))}</section>\n    );\n  }\n\n  function founderSquare(founder: Person) {\n    const { books, company, description, name, img } = founder\n    const [open, setOpen] = useState(false);\n    console.log(open);\n    return (\n      <aside key={name} onClick={() => selectFounder(founder)}>\n        <img\n          style={{\n            height: \"150px\",\n            width: \"150px\",\n            objectFit: \"cover\",\n            objectPosition: \"top\",\n            borderRadius: '10%',\n          }}\n          alt={name}\n          src={img}\n        />\n        <h2>{name}</h2>\n        <h3>üè¢{company}</h3>\n        <p>{`${description.substring(0, 50)}...`}</p>\n      </aside>\n    );\n  }\n}","import React, { useState } from \"react\";\n\nimport { Person } from \"../../content/types\";\n\ninterface Props {\n  founder: Person;\n  unselect(): void;\n}\n\nexport function Founder({\n  founder: { books, name, img, company, description },\n  unselect, \n}: Props) {\n  return (\n    <main>\n      <aside style={{ width: \"100%\" }}>\n        <nav>\n          <img\n            style={{\n              height: \"150px\",\n              width: \"150px\",\n              objectFit: \"cover\",\n              objectPosition: \"top\",\n              borderRadius: \"10%\",\n            }}\n            alt={name}\n            src={img}\n          />\n          <button onClick={unselect}>x</button>\n        </nav>\n        <h2>{name}</h2>\n        <h3>üè¢{company}</h3>\n        <p>{`${description}`}</p>\n      </aside>\n      <hr/>\n\n      <h1>Recommends:</h1>\n      <section>\n        <hr />\n        {renderBookGrid(books)}\n      </section>\n    </main>\n  );\n\n  function renderBookGrid(books: Person[\"books\"]) {\n    return (\n      books &&\n      books.map(({ author, img, title }) => {\n        return (\n          <aside key={title}>\n            <img\n              style={{\n                height: \"250px\",\n                width: \"150px\",\n                objectFit: \"cover\",\n                objectPosition: \"top\",\n                borderRadius: \"10%\",\n              }}\n              alt={title}\n              src={img}\n            />\n            <h3>‚úçÔ∏è{author}</h3>\n\n            <h2>{title}</h2>\n          </aside>\n        );\n      })\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Grid, Founder } from \"./components\";\nimport { Person } from \"./content/types\";\nimport { getRecommendationByFounder } from \"./content/data\";\n\nimport \"./App.css\";\nimport \"./mvp.css\";\n\nfunction App() {\n  const [selected, setSelected] = useState<Person | undefined>();\n\n  const founders = getRecommendationByFounder();\n\n  const contributors = [\n    { name: \"Nick\", url: \"https://www.github.com/nicklewanowicz\" },\n    { name: \"Connor\", url: \"https://www.github.com/foopert\" },\n    { name: \"50w\", url: \"https://www.github.com/50w\" },\n  ];\n  \n  function select(founder: Person | undefined) {\n    setSelected(founder)\n    window.scrollTo(0, 0)\n  }\n\n  return (\n    <div>\n      {renderHeader(selected)}\n      {selected && (\n        <Founder founder={selected} unselect={() => select(undefined)} />\n      )}\n      {selected && <section><h1>View more recommendations:</h1></section>}\n        <Grid\n          founders={founders}\n          selectFounder={(founder: Person) => select(founder)}\n        />\n      <section style={{ padding: \"2rem\" }}>\n        {renderContributors(contributors)}\n      </section>\n    </div>\n  );\n\n  function renderHeader(selected: Person | undefined) {\n    return (\n      <header>\n        <nav>\n          <h1>FounderShelf</h1>\n          <ul>\n            <li>\n              <a\n                href=\"https://www.github.com/50w/foundershelf\"\n                target=\"_blank\"\n              >\n                GitHub ‚Üó\n              </a>\n            </li>\n          </ul>\n        </nav>\n        {!selected && (\n          <>\n            <section>\n              <aside style={{ width: \"auto\" }}>\n                <h2>What is Founder Shelfspace?</h2>\n                <div style={{ flexDirection: \"row\" }}>\n                  <img height={100} src=\"reading.svg\" />\n                  <p>\n                    What does the bookshelf of the worlds most successful\n                    founders, entrepreneurs, and investors look like? Get\n                    context on how they think and browse the growing library of\n                    books they recommend.\n                  </p>\n                </div>\n              </aside>\n            </section>\n            <hr />\n          </>\n        )}\n      </header>\n    );\n  }\n\n  function renderContributors(contributors: { name: string; url: string }[]) {\n    return (\n      <p>\n        Made with ‚ù§Ô∏è by\n        {contributors.map(({ name, url }, i) => {\n          const delimiter =\n            i === 0 ? \" \" : i < contributors.length - 1 ? \", \" : \", and \";\n          return (\n            <span key={name}>\n              {delimiter}\n              <a target=\"_blank\" href={url}>\n                {name}\n              </a>\n            </span>\n          );\n        })}\n      </p>\n    );\n  }\n}\n\nexport default App;\n","import { Person, Book } from \"./types\";\nimport books from \"./books.json\";\nimport founders from \"./founders.json\";\n\nexport interface People {\n  [key: string]: Person;\n}\n\nexport interface Recommendations {\n  [key: string]: string[];\n}\n\nexport function getRecommendationByFounder(): Person[] {\n  return founders.map((founder: Person) => {\n    founder.books = books.filter((book: Book) =>\n      book.recommendations.includes(founder.name)\n    );\n    return founder;\n  });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}